#include<stdio.h>
#include<string.h>
#include<math.h>
#define  pai 3.1415926535898
#define  deg_rad 0.017453293      /*   pai/180  */
#define  rad_deg 57.29577951      /*   180/pai  */
#define  C 1.0015174
#define  S 0.9948174
#define  wcda_la 29.357669609999995     /*  latitude  */
#define  wcda_lo 100.13879227999999    /* longtitude */
double gmst(double mjd){

  double ut1, Tu, alpham;

  ut1 = mjd - floor(mjd);
  Tu = ( mjd - 51544.5 ) / 36525.0;
  alpham = 280.460618370
    + 36000.770053608 * Tu
    + 3.8793333331e-4 * Tu * Tu
    - 2.5833333331e-8 * Tu * Tu * Tu;

  return ( 180.0 + ut1 * 360.0  + alpham );

}

/********** Moon Orbit **********/

void moon_orbit( double mjd, double *MRAS, double *MDEC ){

  double mras[63][3]={
    {0.000300  ,2322131.000000 ,191.000000},
    {0.000300  ,   4067.000000 , 70.000000},
    {0.000300  , 549197.000000 ,220.000000},
    {0.000300  ,1808933.000000 , 58.000000},
    {0.000300  , 349472.000000 ,337.000000},
    {0.000300  , 381404.000000 ,354.000000},
    {0.000300  , 958465.000000 ,340.000000},
    {0.000400  ,  12006.000000 ,187.000000},
    {0.000400  ,  39871.000000 ,223.000000},
    {0.000500  , 509131.000000 ,242.000000},
    {0.000500  ,1745069.000000 , 24.000000},
    {0.000500  ,1908795.000000 , 90.000000},
    {0.000600  ,2258267.000000 ,156.000000}, 
    {0.000600  , 111869.000000 , 38.000000},
    {0.000700  ,  27864.000000 ,127.000000},
    {0.000700  , 485333.000000 ,186.000000}, 
    {0.000700  , 405201.000000 , 50.000000},
    {0.000700  , 790672.000000 ,114.000000}, 
    {0.000800  ,1403732.000000 , 98.000000}, 
    {0.000900  , 858602.000000 ,129.000000}, 
    {0.001100  ,1920802.000000 ,186.000000}, 
    {0.001200  ,1267871.000000 ,249.000000},
    {0.001600  ,1856938.000000 ,152.000000}, 
    {0.001800  , 401329.000000 ,274.000000}, 
    {0.002100  , 341337.000000 , 16.000000}, 
    {0.002100  ,  71998.000000 , 85.000000}, 
    {0.002100  , 990397.000000 ,357.000000}, 
    {0.002200  , 818536.000000 ,151.000000}, 
    {0.002300  , 922466.000000 ,163.000000}, 
    {0.002400  ,  99863.000000 ,122.000000}, 
    {0.002600  ,1379739.000000 , 17.000000}, 
    {0.002700  , 918399.000000 ,182.000000}, 
    {0.002800  ,   1934.000000 ,145.000000}, 
    {0.003700  , 541062.000000 ,259.000000}, 
    {0.003800  ,1781068.000000 , 21.000000}, 
    {0.004000  ,    133.000000 , 29.000000}, 
    {0.004000  ,1844932.000000 , 56.000000}, 
    {0.004000  ,1331734.000000 ,283.000000}, 
    {0.005000  , 481266.000000 ,205.000000}, 
    {0.005200  ,  31932.000000 ,107.000000}, 
    {0.006800  , 926533.000000 ,323.000000}, 
    {0.007900  , 449334.000000 ,188.000000}, 
    {0.008500  , 826671.000000 ,111.000000}, 
    {0.010000  ,1431597.000000 ,315.000000}, 
    {0.010700  ,1303870.000000 ,246.000000}, 
    {0.011000  , 489205.000000 ,142.000000}, 
    {0.012500  ,1443603.000000 , 52.000000}, 
    {0.015400  ,  75870.000000 , 41.000000}, 
    {0.030400  , 513197.900000 ,222.500000}, 
    {0.034700  , 445267.100000 , 27.900000}, 
    {0.040900  , 441199.800000 , 47.400000}, 
    {0.045800  , 854535.200000 ,148.200000}, 
    {0.053300  ,1367733.100000 ,280.700000}, 
    {0.057100  , 377336.300000 , 13.200000}, 
    {0.058800  ,  63863.500000 ,124.200000}, 
    {0.114400  , 966404.000000 ,276.500000}, 
    {0.185100  ,  35999.050000 , 87.530000}, 
    {0.213600  , 954397.740000 ,179.930000}, 
    {0.658300  , 890534.220000 ,145.700000}, 
    {1.274000  , 413335.350000 , 10.740000}, 
    {6.288800  , 477198.868000 , 44.963000}, 
    {218.316200,      0.000000 ,  0.000000}, 
    {481267.880900  ,      0.000000 ,  0.000000},
  };

  double mdec[45][3]={
    {0.000300  , 335334.000000  ,57.000000}, 
    {0.000300  ,1814936.000000  ,16.000000}, 
    {0.000300  ,2264270.000000 ,115.000000}, 
    {0.000300  ,1409735.000000 , 57.000000}, 
    {0.000300  , 932536.000000 ,282.000000}, 
    {0.000400  ,1024264.000000 ,352.000000}, 
    {0.000400  ,2328134.000000 ,149.000000}, 
    {0.000500  , 948395.000000 ,222.000000}, 
    {0.000500  , 419339.000000 ,149.000000}, 
    {0.000500  , 848532.000000 ,190.000000}, 
    {0.000600  ,1361730.000000 ,322.000000}, 
    {0.000600  , 559072.000000 ,134.000000}, 
    {0.000700  ,1309873.000000 ,205.000000}, 
    {0.000800  , 972407.000000 ,235.000000}, 
    {0.000900  ,1787072.000000 ,340.000000}, 
    {0.001000  ,1297866.000000 ,288.000000}, 
    {0.001100  ,1914799.000000 , 48.000000}, 
    {0.001300  ,  37935.000000 , 65.000000}, 
    {0.001300  , 447203.000000 ,  6.000000}, 
    {0.001400  ,  29996.000000 ,129.000000}, 
    {0.001500  , 996400.000000 ,316.000000}, 
    {0.001500  , 928469.000000 ,121.000000}, 
    {0.001500  ,  42002.000000 , 46.000000}, 
    {0.001800  ,1449606.000000 , 10.000000}, 
    {0.001800  , 519201.000000 ,181.000000}, 
    {0.001800  , 820668.000000 ,153.000000}, 
    {0.001900  , 924402.000000 ,141.000000}, 
    {0.002100  , 105866.000000 , 80.000000}, 
    {0.002200  ,1337737.000000 ,241.000000}, 
    {0.002200  , 481268.000000 ,308.000000}, 
    {0.002500  , 860538.000000 ,106.000000}, 
    {0.003400  , 443331.000000 ,230.000000}, 
    {0.004200  ,1850935.000000 , 14.000000}, 
    {0.004300  , 547066.000000 ,217.000000}, 
    {0.008200  , 371333.000000 , 55.000000}, 
    {0.008800  , 471196.000000 , 87.000000}, 
    {0.009300  , 884531.000000 ,187.000000}, 
    {0.017200  ,1437599.800000 ,273.200000}, 
    {0.032600  ,1373736.200000 ,239.000000}, 
    {0.046300  ,  69866.700000 , 82.500000}, 
    {0.055400  , 896537.400000 ,104.000000}, 
    {0.173300  , 407332.200000 , 52.430000}, 
    {0.277700  ,   6003.150000 , 48.310000}, 
    {0.280600  , 960400.890000 ,138.240000}, 
    {5.128100  , 483202.019000 ,  3.273000}, 
  };

  double  para[44][3] = 
  {
    {0.000005   ,      405201.000,       140.000}, 
    {0.000006   ,       99863.000,       212.000}, 
    {0.000006   ,      485333.000,       276.000}, 
    {0.000007   ,     1808933.000,       148.000}, 
    {0.000007   ,     2322131.000,       281.000}, 
    {0.000009   ,      790672.000,       204.000}, 
    {0.000010   ,     1745069.000,       114.000}, 
    {0.000011   ,      858602.000,       219.000}, 
    {0.000011   ,     1908795.000,       180.000}, 
    {0.000012   ,     2258267.000,       246.000}, 
    {0.000013   ,      401329.000,         4.000},   
    {0.000013   ,      341337.000,       106.000}, 
    {0.000013   ,     1403732.000,       188.000}, 
    {0.000019   ,     1267871.000,       339.000}, 
    {0.000023   ,      553069.000,       266.000}, 
    {0.000026   ,      818536.000,       241.000}, 
    {0.000029   ,      990397.000,        87.000},  
    {0.000030   ,       75870.000,       131.000}, 
    {0.000031   ,      922466.000,       253.000}, 
    {0.000033   ,      541062.000,       349.000}, 
    {0.000034   ,      918399.000,       272.000}, 
    {0.000041   ,      481266.000,       295.000}, 
    {0.000063   ,      449334.000,       278.000}, 
    {0.000064   ,     1331734.000,        13.000},  
    {0.000073   ,     1781068.000,       111.000}, 
    {0.000078   ,     1844932.000,       146.000}, 
    {0.000083   ,      926533.000,        53.000},  
    {0.000084   ,       63864.000,       214.000}, 
    {0.000103   ,      826671.000,       201.000}, 
    {0.000111   ,       35999.000,       178.000}, 
    {0.000167   ,     1303870.000,       336.000}, 
    {0.000173   ,     1431597.000,        45.000},  
    {0.000197   ,      489205.000,       232.000}, 
    {0.000263   ,      513198.000,       312.000}, 
    {0.000271   ,      445267.000,       118.000}, 
    {0.000319   ,      441199.800,       137.400}, 
    {0.000400   ,      377336.300,       103.200}, 
    {0.000531   ,      854535.200,       238.200}, 
    {0.000858   ,     1367733.100,        10.700},  
    {0.002824   ,      954397.740,       269.930},        
    {0.007842   ,      890534.220,       235.700}, 
    {0.009530   ,      413335.350,       100.740},        
    {0.051820   ,      477198.868,       134.963},       
    {0.950725   ,           0.000,         0.000}
  };

  double T,dt;
  int    i,j,k;
  double s1,s2,s3;
  double mod1,mod2,mod3;
  double SUMD=0.0;
  double SUMR=0.0;
  double SUMP=0.0;
  double ram,bet;
  double de,e0,e;
  double cr,sr,cb,sb,ce,se;
  double RAS,DEC;
  double u,v,w;
  double g,n,m;
  double theta,gamma;
  
  dt = 58.0 + 0.8 * ( 2000.0 - 1990.0 );
  T = ( mjd / 36525.0 ) - ( 51544.5 / 36525.0 ) + ( dt / 3600.0 / 24.0 /36525.0 );
  
  for( i = 0; i < 63; i++ ){
    
    mod1 = mras[i][1] * T - ( (int)( mras[i][1] * T / 360.0 ) ) * 360.0;
    
    s1 = mras[i][0] * cos( ( mod1 + mras[i][2]) * deg_rad );
    if( i == 62 ) s1 = mras[i][0] * T * cos( ( mod1 + mras[i][2] ) * deg_rad );
    
    SUMR += s1;
  }
  
  for( j = 0; j < 45 ; j++){
    
    mod2 = mdec[j][1] * T - ( (int) ( mdec[j][1] * T / 360.0 ) ) * 360.0;
    
    s2 = mdec[j][0] * cos ( ( mod2 + mdec[j][2] ) * deg_rad );
    /*    if( j == -1 ) s2 = mdec[j][0] * T * cos( ( mod2 + mdec[j][2] ) * deg_rad );*/
    
    SUMD += s2;
  }

  for( k = 0; k < 44 ; k++){
    
    mod3 = para[k][1] * T - ( (int) ( para[k][1] * T / 360.0 ) ) * 360.0;
    s3 = para[k][0] * cos ( ( mod3 + para[k][2] ) * deg_rad );
    /*    if( k == -1 ) s3 = para[k][0] * T * cos ( ( mod3 + para[k][2] ) * deg_rad );*/
    
    SUMP += s3;
  }
  
  de = 0.00256 * cos( ( 1934.0 * T + 235.0 ) * deg_rad ) + 0.00015 * cos( ( 72002.0 * T + 201.0 ) * deg_rad );
  e0 = 23.43928 - 0.01301 * T;
  e = e0 + de;
  
  ce = cos( e * deg_rad );
  se = sin( e * deg_rad );
  cr = cos( SUMR * deg_rad );
  sr = sin( SUMR * deg_rad );
  cb = cos( SUMD * deg_rad );
  sb = sin( SUMD * deg_rad );
  
  u = cb * cr;
  v = cb * sr * ce - sb * se;
  w = cb * sr * se + sb * ce;
  
  RAS = atan2( v, u );
  DEC = atan2( w, sqrt( u * u + v * v ) );
  
  g = gmst( mjd ) + wcda_lo;
  theta = ( g - floor( g / 360.0 ) * 360.0 ) * deg_rad;

  m = sin( SUMP * deg_rad ) * C * cos( wcda_la * deg_rad ) / cos( DEC );

  *MRAS = ( atan( m * sin( RAS - theta ) / ( 1 - m * cos( RAS - theta ) ) ) + RAS ) * rad_deg;

  if( *MRAS < 0.0) *MRAS += 360.0;
  if( *MRAS > 360.0) *MRAS -= 360.0;

  gamma = atan( S / C * tan( wcda_la * deg_rad ) * cos( ( *MRAS * deg_rad - RAS ) / 2.0 ) 
		/ cos( ( *MRAS * deg_rad + RAS ) / 2.0 - theta ) );
  n = sin( SUMP * deg_rad ) * S * sin( wcda_la * deg_rad ) / sin( gamma );

  *MDEC = ( atan( n * sin( DEC - gamma ) / ( 1 - n * cos( DEC - gamma ) ) ) + DEC ) * rad_deg;

}
